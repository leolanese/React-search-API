{"version":3,"sources":["components/Card.js","components/CardList.js","components/Footer.js","components/Search.js","components/Scroll.js","components/UseErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","Fragment","className","src","concat","title","alt","memo","users","cardComponent","map","user","i","key","Footer","props","messageToChield1","messageToChield2","onSearchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","UseErrorBoundary","_useState","useState","_useState2","_slicedToArray","error","setError","useCallback","_useErrorBoundary","useErrorBoundary","_useErrorBoundary2","throwError","_useState3","searchField","_useState4","appState","setAppState","useEffect","fetch","then","response","json","setUsers","catch","prevState","_objectSpread","filteredUsers","filter","toLowerCase","includes","length","Search","event","target","value","CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.f5d9b940.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    // same as:\r\n    // const { name, emial, id } = props;\r\n    return (\r\n        <>\r\n          <article className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5 \">\r\n          <div className=\"tc\">\r\n            <img src={`https://robohash.org/${id}?size=75x75`} \r\n              className=\"br-100 h4 w4 dib ba b--black-05 pa2\" \r\n              title=\"Photo of a kitty staring at you\" \r\n              alt=\"card person\"/>\r\n            <h1 className=\"f3 mb2\">{ name }</h1>\r\n            <h2 className=\"f5 fw4 gray mt0\">{ email }</h2>\r\n          </div>\r\n        </article>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, {memo} from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({users}) {\r\n\r\n    // if (true) {\r\n    //     throw new Error('Error to be handle by ')\r\n    // } \r\n\r\n    const cardComponent = users.map( (user, i) => {\r\n        // Warning: Each child in a list should have a unique \"key\" prop\r\n        // Tip: When do a loop. We need a key: Key={} prop it is need it\r\n      return (\r\n        <Card key={i} \r\n            id={ users[i].id } \r\n            name={users[i].name} \r\n            email={users[i].email} />\r\n      )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"tc ph4\">\r\n            <h1 className=\"f3 f2-m f1-l fw2 black-90 mv3\">\r\n                Search\r\n            </h1>\r\n            <h2 className=\"f5 f4-m f3-l fw2 black-50 mt0 lh-copy\">\r\n                Seach and filtering using state and hooks\r\n            </h2>\r\n            </header>\r\n\r\n            {cardComponent}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(CardList);","import React from 'react';\r\n\r\nconst Footer = props => {\r\n    return (\r\n        <div className=\"f1 tc\">\r\n            <p>Hi!</p>\r\n            { props.messageToChield1 }\r\n            { props.messageToChield2 }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, {memo} from 'react';\r\n\r\nconst Search = ({onSearchChange}) => {\r\n    return (\r\n        <div className=\"pa2 ba \">\r\n            <input type='search 'placeholder='Search ...' onChange={onSearchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(Search);","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '1px solid black', height: '600px'}}>\r\n          {props.children}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import { useState, useCallback } from 'react';\r\n\r\nconst UseErrorBoundary = () => {\r\n    const [error, setError] = useState(null);\r\n\r\n    const throwError = useCallback((error) => {\r\n        setError(error);\r\n    }, []);\r\n\r\n    return [error, throwError];\r\n}\r\n\r\nexport default UseErrorBoundary;\r\n","import React, { useState, useEffect, memo } from 'react'\r\nimport CardList from '../components/CardList';\r\n// import { mockResults } from './assets/resultsMock'\r\nimport Footer from '../components/Footer';\r\nimport Search from '../components/Search';\r\nimport Scroll from '../components/Scroll';\r\nimport useErrorBoundary from './../components/UseErrorBoundary';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(null);\r\n  const [error, throwError] = useErrorBoundary();\r\n\r\n  const [appState, setAppState] = useState({\r\n    users: [], // mockResults\r\n    searchField: '',\r\n  })\r\n\r\n  useEffect(() => {\r\n    // componentDidMount() logic here\r\n    // You DON'T use the keyword \"this\". Since it's not a class\r\n    // You DON'T have to reference the component itself.\r\n\r\n    // here using native fetch: `window.fetch`\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then((users) => setUsers(users))\r\n    .catch((error) => throwError(error));\r\n  }, [throwError])\r\n  // [appState] means that useEffect hook is watching for changes in appState, \r\n  // and when appState changes, the useEffect hook will run again\r\n\r\n  const setUsers = (users) => {\r\n    setAppState((prevState) => ({ ...prevState, users: users }));\r\n    // (prevState => ({ ...prevState, users: users })). This ensures that you're always \r\n    // using the most recent state when setting the new state\r\n  };\r\n\r\n  const onSearchChange = (event) => {\r\n    setAppState({ ...appState, searchField: event.target.value });\r\n  };\r\n\r\n  const filteredUsers = appState.users.filter((user) =>\r\n    user.name.toLowerCase().includes(appState.searchField.toLowerCase())\r\n  );\r\n\r\n  return !appState.users.length ?\r\n      <>\r\n        <h1>Loading... Please, wait.</h1>\r\n      </>\r\n  : (\r\n      <div className='tc'>\r\n\r\n          {/* they are communicating each other brother using state: 'useState' using Hooks */}\r\n          <Search onSearchChange={onSearchChange} />\r\n\r\n          <Scroll>{/* Parent */}\r\n            <CardList users={filteredUsers} /> {/* Children */}\r\n          </Scroll>\r\n\r\n          <Footer\r\n              messageToChield1={'message 1'} \r\n              messageToChield2={'message 2'} >\r\n          </Footer>\r\n\r\n      </div>\r\n  );\r\n\r\n}\r\n\r\nexport default memo(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  //  lets you find common bugs in your components early during development.\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}